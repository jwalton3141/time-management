name: Tag

on:
#  workflow_run:
#    workflows: ["Verify"]
#    branches: [main]
#    types: [completed]
  push:
    branches: [main]

jobs:
  tag-repo:

    runs-on: ubuntu-latest
    #if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:

      - name: Check out source repository
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Set up poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.8

      - name: Fetch git tags
        run: git fetch --tags --quiet
      - name: Extract git tags
        run: echo "::set-output name=TAGS::$(git tag | tr '\n' ' ')"
        id: git
      - name: Extract package version from pyproject.toml
        working-directory: "./python_pkgs/jrtimeman"
        run: echo "::set-output name=VERSION::$(poetry version --short)"
        id: package

      - name: Display discovered package version
        run: echo ${{ steps.package.outputs.VERSION }}
      - name: Display discovered git tags
        run: echo ${{ steps.git.outputs.TAGS }}

      - name: Check if tag exists for current package version
        run: |
          echo "::set-output name=IS_TAGGED::$(echo ${{ steps.git.outputs.TAGS }} | grep -q ${{ steps.package.outputs.VERSION }})"
        id: version

      - name: Debug is_tagged
        run: echo ${{ steps.version.outputs.IS_TAGGED }}

      - name: Tag repo at discovered package version
        if: ${{ !steps.version.outputs.IS_TAGGED }}
        uses: actions/github-script@v4
        with:
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/v${{ steps.package.outputs.VERSION }}",
              sha: context.sha
            })
